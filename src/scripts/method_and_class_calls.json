{
    "method_calls": {
        "EasyenglishApplication.main": [
            "SpringApplication.run"
        ],
        "InterceptorConfig.addInterceptors": [
            "jwtInterceptor",
            "addPathPatterns",
            "registry.addInterceptor",
            "excludePathPatterns"
        ],
        "WebConfig.addInterceptors": [
            "addPathPatterns",
            "registry.addInterceptor",
            "excludePathPatterns"
        ],
        "comments.setComment_id.setComment_state.setUser_id.setPost_id.setContents.setComment_time": [
            "append",
            "hashCode",
            "sb.toString",
            "sb.append",
            "getSimpleName",
            "getClass"
        ],
        "post_name.setPost_id.setState.setUser_id.setTitle.setContent.setPublic_or.setTime": [
            "append",
            "hashCode",
            "sb.toString",
            "sb.append",
            "getSimpleName",
            "getClass"
        ],
        "LoginCheckInterceptor.postHandle": [],
        "LoginCheckInterceptor.postHandle.afterCompletion": [],
        "commentServiceImpl.addComment": [
            "commentMapper.insertComment"
        ],
        "commentServiceImpl.addComment.deleteComment": [
            "e.getMessage",
            "commentMapper.deleteComment",
            "e.printStackTrace"
        ],
        "correctionFeedbackServiceImpl.addFeedback": [
            "e.getMessage",
            "e.printStackTrace",
            "correctionFeedbackMapper.addFeedback"
        ],
        "correctionFeedbackServiceImpl.addFeedback.deleteFeedback": [
            "e.printStackTrace",
            "e.getMessage",
            "correctionFeedbackMapper.deleteFeedback"
        ],
        "correctionFeedbackServiceImpl.addFeedback.deleteFeedback.updateFeedback": [
            "correctionFeedbackMapper.updateFeedback",
            "defaultClient",
            "frequencyPenalty",
            "essay_.getEssay_content",
            "temperature",
            "newBuilder",
            "correctionFeedbackMapper.findByID",
            "defaultRetrofit",
            "essay_.getEssay_title",
            "presencePenalty",
            "getChoices",
            "prompt",
            "defaultObjectMapper",
            "correctionFeedbackMapper.findByEssay",
            "proxy",
            "retrofit.create",
            "topP",
            "build",
            "CompletionRequest.builder",
            "choice.getText",
            "maxTokens",
            "service.createCompletion",
            "model",
            "essay_.getEssay_requirements",
            "get"
        ],
        "essayServiceImpl.addEssay": [
            "essayMapper.addEssay",
            "e.getMessage",
            "e.printStackTrace"
        ],
        "essayServiceImpl.addEssay.deleteEssay": [
            "e.getMessage",
            "e.printStackTrace",
            "essayMapper.deleteEssay"
        ],
        "essayServiceImpl.addEssay.deleteEssay.updateEssay": [
            "essayMapper.updateEssay"
        ],
        "postServiceImpl.addPost": [
            "postMapper.insertPost"
        ],
        "postServiceImpl.addPost.updatePost": [
            "post.getTitle",
            "postMapper.updatePost",
            "post.getContent"
        ],
        "postServiceImpl.addPost.updatePost.deletePost": [
            "postMapper.findPostByTime",
            "e.getMessage",
            "postMapper.deletePost",
            "e.printStackTrace"
        ],
        "speakEnRecordServiceimpl.addRecord": [
            "e.getMessage",
            "e.printStackTrace",
            "speakEnRecordMapper.addRecord"
        ],
        "speakEnRecordServiceimpl.addRecord.deleteRecord": [
            "speakEnRecordMapper.deleteRecord",
            "e.getMessage",
            "e.printStackTrace"
        ],
        "speakEnRecordServiceimpl.addRecord.deleteRecord.updateRecord": [
            "defaultClient",
            "frequencyPenalty",
            "speakEnRecordMapper.findByTopic",
            "temperature",
            "newBuilder",
            "e.getMessage",
            "defaultRetrofit",
            "presencePenalty",
            "getChoices",
            "speakEnRecordMapper.updateRecord",
            "prompt",
            "defaultObjectMapper",
            "e.printStackTrace",
            "proxy",
            "retrofit.create",
            "topP",
            "build",
            "CompletionRequest.builder",
            "choice.getText",
            "speakEnRecordMapper.getAllRecord",
            "maxTokens",
            "service.createCompletion",
            "model",
            "get"
        ],
        "UserServiceImpl.resetPassword": [
            "userMapper.resetPassword"
        ],
        "UserServiceImpl.resetPassword.sendForgetMail": [
            "nextInt",
            "mailSender.send",
            "redisUtils.get",
            "equals",
            "user.getEmail",
            "message.setText",
            "redisUtils.set",
            "message.setSubject",
            "message.setFrom",
            "userMapper.getUserByEmail",
            "redisUtils.delete",
            "message.setTo",
            "value.toString"
        ],
        "UserServiceImpl.resetPassword.sendForgetMail.modifyInformation": [
            "userMapper.updateUser",
            "userMapper.getUserById",
            "user.getUser_id"
        ],
        "RedisUtils.set": [
            "redisTemplate.opsForValue",
            "set"
        ],
        "RedisUtils.set.set": [
            "redisTemplate.opsForValue",
            "set"
        ],
        "RedisUtils.set.set.delete": [
            "redisTemplate.opsForValue",
            "redisTemplate.delete",
            "redisTemplate.hasKey",
            "redisTemplate.getExpire",
            "Long.parseLong",
            "get"
        ]
    },
    "class_calls": {
        "EasyenglishApplication": [],
        "InterceptorConfig": [
            "JwtInterceptor"
        ],
        "RedisConfig": [
            "RedisTemplate",
            "StringRedisSerializer",
            "GenericFastJsonRedisSerializer"
        ],
        "WebConfig": [],
        "commentController": [],
        "correctionFeedbackController": [
            "correctionFeedback"
        ],
        "essayController": [],
        "LoginController": [
            "HashMap"
        ],
        "postController": [
            "HashMap"
        ],
        "RegisterController": [],
        "ResetPasswordController": [],
        "speakenController": [],
        "userController": [],
        "viewprogressController": [],
        "WordsArticleController": [
            "HttpGet"
        ],
        "essayGenerate": [],
        "Result": [
            "Result"
        ],
        "topicReq": [],
        "ApiResult": [],
        "comments": [
            "StringBuilder"
        ],
        "correctionFeedback": [],
        "essay": [],
        "post_name": [
            "StringBuilder"
        ],
        "speakEnPracticeRecord": [],
        "User": [],
        "LoginCheckInterceptor": [],
        "commentServiceImpl": [
            "IllegalArgumentException",
            "RuntimeException"
        ],
        "correctionFeedbackServiceImpl": [
            "RuntimeException",
            "InetSocketAddress",
            "Proxy",
            "OpenAiService"
        ],
        "essayServiceImpl": [
            "RuntimeException"
        ],
        "LoginServiceImpl": [],
        "postServiceImpl": [
            "IllegalArgumentException",
            "RuntimeException"
        ],
        "RegisterServiceImpl": [],
        "speakEnRecordServiceimpl": [
            "RuntimeException",
            "InetSocketAddress",
            "Proxy",
            "OpenAiService"
        ],
        "UserServiceImpl": [
            "SimpleMailMessage",
            "Random"
        ],
        "viewprogressServiceImpl": [],
        "ApiResultHandler": [
            "ApiResult"
        ],
        "ImgUtil": [
            "StringBuilder",
            "Random"
        ],
        "JwtInterceptor": [],
        "JwtUtil": [
            "Date",
            "HashMap"
        ],
        "RedisUtils": [],
        "EasyenglishApplicationTests": []
    }
}